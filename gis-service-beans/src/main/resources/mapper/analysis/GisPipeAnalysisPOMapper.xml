<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdrx.gis.dao.analysis.GisPipeAnalysisPOMapper">
  <resultMap id="BaseResultMap" type="com.jdrx.gis.beans.entity.analysis.GisPipeAnalysisPO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 31 20:44:12 CST 2019.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="x" jdbcType="NUMERIC" property="x" />
    <result column="y" jdbcType="NUMERIC" property="y" />
    <result column="area" jdbcType="VARCHAR" property="area" typeHandler="GeomStrHandler"/>
    <result column="delete_flag" jdbcType="BIT" property="deleteFlag" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="belong_to" jdbcType="BIGINT" property="belongTo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 31 20:44:12 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 31 20:44:12 CST 2019.
    -->
    id, code, x, y, area, delete_flag, create_by, create_at, update_by, update_at, name,belong_to
  </sql>


  <insert id="insertSelective" parameterType="com.jdrx.gis.beans.entity.analysis.GisPipeAnalysisPO" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 31 20:44:12 CST 2019.
    -->
    insert into gis_pipe_analysis
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="x != null">
        x,
      </if>
      <if test="y != null">
        y,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="belongTo != null">
        belong_to,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="x != null">
        #{x,jdbcType=NUMERIC},
      </if>
      <if test="y != null">
        #{y,jdbcType=NUMERIC},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR,typeHandler=GeomStrHandler},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="belongTo != null">
        #{belongTo,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <select id="selectById" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from gis_pipe_analysis a
    WHERE delete_flag = FALSE
    AND
    id = #{id}
  </select>

  <select id="selectByParamas"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from gis_pipe_analysis a
    WHERE delete_flag = FALSE
    <if test="dto.code != null and dto.code != ''">
      AND
      code like   '%${dto.code}%'
      OR
      name like  '%${dto.code}%'
    </if>
    <if test="dto.startTime != null ">
      AND
      to_date(create_at :: text,'YYYY-MM-DD') &gt;= to_date(#{dto.startTime} :: text,'YYYY-MM-DD')
    </if>
    <if test="dto.endTime != null ">
      AND
      to_date(create_at :: text,'YYYY-MM-DD') &lt;= to_date(#{dto.endTime} :: text,'YYYY-MM-DD')
    </if>

  </select>

  <select id="getExtendArea"  resultType="java.lang.String">
    SELECT ST_AsText(ST_Transform(ST_GeomFromText(
    (select st_Astext(ST_ConvexHull(ST_Union(geom))) from gis_dev_ext gdx where dev_id in
    <foreach item="devIds" index="index" collection="devIds" open="(" separator="," close=")">
      #{devIds}
    </foreach>
    )
    ,${srid}),4326)) As wgs_geom;
  </select>
</mapper>