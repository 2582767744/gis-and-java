<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jdrx.gis.dao.query.DevQueryDAO">
    <resultMap id="BaseResultMap" type="com.jdrx.gis.beans.entry.query.SpaceInfTotalPO">
        <result column="coverageName" property="coverageName" jdbcType="VARCHAR"/>
        <result column="devNum" property="number" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.jdrx.gis.beans.entry.basic.ShareDevTypePO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="val" jdbcType="VARCHAR" property="val"/>
        <result column="p_id" jdbcType="BIGINT" property="pId"/>
        <result column="platform_code" jdbcType="VARCHAR" property="platformCode"/>
        <result column="limb_leaf" jdbcType="SMALLINT" property="limbLeaf"/>
        <result column="del_flag" jdbcType="SMALLINT" property="delFlag"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_at" jdbcType="TIMESTAMP" property="createAt"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
    </resultMap>

    <resultMap id="BaseResultMap3" type="com.jdrx.gis.beans.vo.query.SpaceInfoVO">
        <id column="devId" jdbcType="BIGINT" property="devId"/>
        <result column="typeName" jdbcType="VARCHAR" property="typeName"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="addr" jdbcType="VARCHAR" property="addr"/>
        <result column="dataInfo" jdbcType="OTHER" property="dataInfo"/>
    </resultMap>

    <resultMap id="BaseResultMap4" type="com.jdrx.gis.beans.vo.query.FieldNameVO">
        <result column="fieldDesc" jdbcType="VARCHAR" property="fieldDesc"/>
        <result column="fieldName" jdbcType="VARCHAR" property="fieldName"/>
        <result column="idx" jdbcType="SMALLINT" property="idx"/>
    </resultMap>

    <resultMap id="BaseResultMap5" type="com.jdrx.gis.beans.vo.query.SonsNumVO">
        <result column="typeName" jdbcType="VARCHAR" property="typeName"/>
        <result column="num" jdbcType="VARCHAR" property="num"/>
    </resultMap>

    <resultMap id="BaseResultMap6" type="com.jdrx.gis.beans.entry.query.SpaceInfTotalPO">
        <result column="coverageName" jdbcType="VARCHAR" property="coverageName"/>
        <result column="number" jdbcType="BIGINT" property="number"/>
        <result column="id" jdbcType="BIGINT" property="id"/>
    </resultMap>


    <select id="findFirstHierarchyDevType" resultMap="BaseResultMap2">
         select a.* from share_dev_type a, gis_share_dev_type_ext b where a.p_id = -1 and a.del_flag = 0 and a.id=b.type_id order by sort_by
    </select>

    <select id="findDevTypeByPID" resultMap="BaseResultMap2">
        select * from (
		    with recursive a as (
			    select a.* FROM share_dev_type a where p_id = #{pID,jdbcType=BIGINT}
				    and del_flag = 0
               union all
               select b.* from share_dev_type b,a where a.id = b.p_id
				    and b.del_flag = 0
             ) select * from a
		) rs where rs.limb_leaf = 2
    </select>

    <select id="getCountByTypeIds" resultType="java.lang.Long" parameterType="java.util.List">
        select count(1) cnt from share_dev sd
        <where>
            del_flag = 0
            <if test="typeIds != null and typeIds.size > 0">
                and type_id in
                <foreach collection="typeIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="devIds != null and devIds != ''">
                and EXISTS (select 1 from
                (SELECT regexp_split_to_table(#{devIds},',') AS dev_id) AS vir where vir.dev_id = sd.id)
            </if>
        </where>
    </select>

    <select id="findDevListByTypeID" resultMap="BaseResultMap3">
        SELECT * FROM (
            SELECT devId, name, typeName, addr, dataInfo
                FROM
                 (
                  SELECT sd.ID devId, sd.name, sd.addr, sdt.name typeName
                  FROM
                    (
                    SELECT *  FROM share_dev sd
                      WHERE type_id IN (
                                SELECT id  FROM (
                                        WITH RECURSIVE A AS (
                                        SELECT A.*  FROM share_dev_type A
                                            WHERE id = #{dto.typeId,jdbcType=BIGINT}
                                            AND del_flag = 0 UNION ALL
                                        SELECT b.*  FROM share_dev_type b, A
                                            WHERE A.ID = b.p_id  AND b.del_flag = 0
                                        ) SELECT *  FROM A
                                    ) rs  WHERE rs.limb_leaf = 2
                            )
                            <if test="devIds != null and devIds != ''">
                                and EXISTS (select 1 from
                                (SELECT regexp_split_to_table(#{devIds, jdbcType=VARCHAR},',') AS dev_id) AS vir where vir.dev_id = sd.id)
                            </if>
                        ) sd LEFT JOIN share_dev_type sdt ON sd.type_id = sdt.ID
                        AND sd.del_flag = 0
                    ) dv INNER JOIN ( SELECT dev_id, data_info dataInfo FROM gis_dev_ext WHERE delete_flag = FALSE ) b
            ON dv.devId = b.dev_id
        ) as jj
    </select>

    <select id="findDevListByTypeIDCount" resultType="java.lang.Integer">
        SELECT count(*) FROM (
          SELECT devId, name, typeName, addr, dataInfo
          FROM
          (
          SELECT sd.ID devId, sd.name, sd.addr, sdt.name typeName
          FROM
          (
            SELECT *  FROM share_dev sd
            WHERE type_id IN (
            SELECT id  FROM (
            WITH RECURSIVE A AS (
            SELECT A.*  FROM share_dev_type A
            WHERE p_id = #{dto.typeId,jdbcType=BIGINT}
            AND del_flag = 0 UNION ALL
            SELECT b.*  FROM share_dev_type b, A
            WHERE A.ID = b.p_id  AND b.del_flag = 0
            ) SELECT *  FROM A
          ) rs  WHERE rs.limb_leaf = 2
          )
        <if test="devIds != null and devIds != ''">
            and EXISTS (select 1 from
            (SELECT regexp_split_to_table(#{devIds},',') AS dev_id) AS vir where vir.dev_id = sd.id)
        </if>
        ) sd LEFT JOIN share_dev_type sdt ON sd.type_id = sdt.ID
        AND sd.del_flag = 0
        ) dv LEFT JOIN ( SELECT dev_id, data_info dataInfo FROM gis_dev_ext WHERE delete_flag = FALSE ) b
        ON dv.devId = b.dev_id
        ) as jj
    </select>

    <select id="findFieldNamesByTypeID" resultMap="BaseResultMap4">
        SELECT fieldName, fieldDesc from (
            SELECT field_name fieldName, max ( field_desc ) fieldDesc, max (idx) idx
            FROM
                (
                SELECT type_id, field_desc, field_name, idx
                FROM gis_dev_tpl_attr
                WHERE delete_flag = FALSE
                    AND type_id IN (
                            WITH RECURSIVE A AS (
                            SELECT A.*
                            FROM share_dev_type A
                            WHERE ID = #{id,jdbcType=BIGINT}
                            AND del_flag = 0
                            UNION ALL
                            SELECT b.*  FROM share_dev_type b, A  WHERE A.P_ID = b.id
                            AND b.del_flag = 0
                            ) SELECT ID FROM A
                        )
                ) rss
            GROUP BY field_name order by idx
        ) as fd
    </select>

    <select id="findWaterPipeCaliberSum" resultType="java.lang.Long">
        select count(1) num from gis_dev_ext gdx
        where delete_flag = false
        <if test="devIds != null and devIds != ''">
            and EXISTS (select 1 from
            (SELECT regexp_split_to_table(#{devIds},',') AS dev_id) AS vir  where vir.dev_id = gdx.dev_id)
        </if>
        <choose>
            <when test='pre == "("'>
                and  caliber > #{min,jdbcType=INTEGER}
            </when>
            <when test='pre == "["'>
                and  caliber >= #{min,jdbcType=INTEGER}
            </when>
        </choose>
        <choose>
            <when test='suf == ")"'>
                and  caliber &lt; #{max,jdbcType=INTEGER}
            </when>
            <when test='suf == "]"'>
                and  caliber &lt;= #{min,jdbcType=INTEGER}
            </when>
        </choose>
    </select>

    <select id="findSpaceInfoByDevIds" resultMap="BaseResultMap6">
        select firstTypeid id,firstTypeName coverageName,count(1) number from (
            select ccc.*,ddd.* from (
                select dev_id,type_id from (
                SELECT dev_id FROM gis_dev_ext gdx
                    <where>
                        1=1
                        <if test="devIds != null and devIds != ''">
                            and EXISTS (select 1 from
                            (SELECT regexp_split_to_table(#{devIds},',') AS dev_id) AS vir  where vir.dev_id= gdx.dev_id)
                        </if>
                    </where>
                ) a INNER JOIN share_dev b on a.dev_id = b.id
            ) ccc left join (
                select bcd.*,tc.name firstTypeName from (
                    select id,name,path,path[1] firstTypeId from (
                        with RECURSIVE t(id,name,path)  as (
                        SELECT a.id,a.name,array[a.id] FROM share_dev_type a where p_id = -1
                        union all
                        select b.id,b.name,PATH||b.id from share_dev_type b , t c where c.id = b.p_id
                        ) select * from t
                    ) ac
                ) bcd left join
                (select id,name from share_dev_type where del_flag = 0) tc on bcd.firstTypeId = tc.id
            ) ddd on ccc.type_id = ddd.id
        ) fff group by firsttypeId,firsttypename
    </select>

    <select id="findFieldNamesByDevID" parameterType="java.lang.String" resultMap="BaseResultMap4">
       SELECT field_name AS fieldName, field_desc AS fieldDesc, idx
            FROM gis_dev_tpl_attr
            WHERE type_id = (
                SELECT type_id
                FROM (
                    SELECT * FROM (
                        SELECT DISTINCT type_id FROM gis_dev_tpl_attr
                    ) att
                    WHERE EXISTS (
                        SELECT 1
                        FROM (
                            WITH RECURSIVE a AS (
                                    SELECT a.id, a.p_id
                                    FROM share_dev_type a
                                    WHERE del_flag = 0
                                        AND id = (SELECT type_id from share_dev where id = #{devId} limit 1)
                                    UNION ALL
                                    SELECT b.id, b.p_id
                                    FROM share_dev_type b, a
                                    WHERE b.id = a.p_id
                                )
                            SELECT * FROM a
                        ) bc
                        WHERE bc.id = att.type_id
                    )
                ) exi
                    INNER JOIN (
                        SELECT *
                        FROM (
                            WITH RECURSIVE t (id, p_id, depth) AS (
                                    SELECT a.id, a.p_id, 1
                                    FROM share_dev_type a
                                    WHERE del_flag = 0
                                        AND id =(SELECT type_id from share_dev where id = #{devId} limit 1)
                                    UNION ALL
                                    SELECT b.id, b.p_id, c.DEPTH + 1
                                    FROM share_dev_type b, t c
                                    WHERE c.p_id = b.id
                                )
                            SELECT * FROM t
                        ) por ORDER BY depth ASC
                    ) pathOrd
                    ON exi.type_id = pathOrd.id
                LIMIT 1
            )
    </select>
</mapper>