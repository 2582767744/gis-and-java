<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jdrx.gis.dao.query.SelfExamination">
    <resultMap id="BaseResultMap" type="com.jdrx.gis.beans.entity.query.TypeToDevNumsPO">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="depth" property="depth" jdbcType="INTEGER"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="limb_Leaf" property="limbLeaf" jdbcType="SMALLINT"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
    </resultMap>

    <select id="findTypeTodevNums" resultMap="BaseResultMap">
        select id,name,depth,path,limb_leaf,COUNT(1) num from (
            select * from (
                select b.*,
                a.limb_leaf
                from share_dev_type a
                left join
                (
                    with RECURSIVE t(id,name,p_id,depth,path) as
                    (
                        SELECT a.id,a.name,a.p_id,1,array[a.id]
                        FROM share_dev_type a
                        where p_id = -1
                        union all
                        select b.id,b.name,b.p_id,c.DEPTH+1,PATH||b.id
                        from share_dev_type b , t c where c.id = b.p_id
                    ) select * from t
                ) b on a.id = b.id and a.del_flag = 0
            ) a left join
            (
              select type_id
              from share_dev a
              inner join gis_dev_ext b
              on a.del_flag = 0 and b.delete_flag = false and a.id = b.dev_id
            ) b on a.id = b.type_id
        ) cc GROUP BY id,name,depth,path,limb_leaf order by path asc
    </select>

    <select id="findDevNums" resultMap="BaseResultMap">
       select id,name ,count(type_id) num from (
				select * from (
				    select b.*,
                    a.limb_leaf
                    from share_dev_type a
                    inner join
                    (
                        with RECURSIVE t(id,name,p_id,depth,path) as
                        (
                            SELECT a.id,a.name,a.p_id,1,array[a.id]
                            FROM share_dev_type a
                            where p_id = -1
                            union all
                            select b.id,b.name,b.p_id,c.DEPTH+1,PATH||b.id
                            from share_dev_type b , t c where c.id = b.p_id
                        ) select * from t
                    ) b on a.id = b.id and a.del_flag = 0 and a.limb_leaf =2
				) as aa left join (
                select type_id
                from share_dev a
                inner join gis_dev_ext b
                on a.del_flag = 0 and b.delete_flag = false and a.id = b.dev_id
                ) as bb on aa.id = bb.type_id
	) as cc GROUP BY id,name order by id asc ,name asc
    </select>
</mapper>