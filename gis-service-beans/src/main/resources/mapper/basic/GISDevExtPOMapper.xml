<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdrx.gis.dao.basic.GISDevExtPOMapper">
    <resultMap id="BaseResultMap" type="com.jdrx.gis.beans.entity.basic.GISDevExtPO">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="dev_id" jdbcType="CHAR" property="devId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="caliber" jdbcType="INTEGER" property="caliber" />
        <result column="material" jdbcType="VARCHAR" property="material" />
        <result column="geom" jdbcType="OTHER" property="geom" />
        <result column="tpl_type_id" jdbcType="BIGINT" property="tplTypeId" />
        <result column="data_info" jdbcType="OTHER" property="dataInfo" />
        <result column="delete_flag" jdbcType="BIT" property="deleteFlag" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
        <result column="belong_to" jdbcType="BIGINT" property="belongTo" />
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.jdrx.gis.beans.vo.query.GISDevExtVO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="dev_id" jdbcType="CHAR" property="devId"/>
        <result column="tpl_type_id" jdbcType="BIGINT" property="tplTypeId"/>
        <result column="data_info" jdbcType="OTHER" property="dataInfo"/>
        <result column="typeName" jdbcType="VARCHAR" property="typeName"/>
    </resultMap>

    <resultMap id="BaseResultMap3" type="com.jdrx.gis.beans.vo.query.GISDevExt2VO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="dev_id" jdbcType="CHAR" property="devId"/>
        <result column="type_id" jdbcType="BIGINT" property="typeId"/>
        <result column="geom" jdbcType="VARCHAR" property="geom"/>
        <result column="type_name" jdbcType="VARCHAR" property="typeName"/>
        <result column="p_id" jdbcType="BIGINT" property="pId"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, dev_id, name, code, caliber, material, geom, tpl_type_id, data_info, delete_flag,
    create_by, create_at, update_by, update_at, belong_to
    </sql>

    <select id="getDevExtByDevId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        id, dev_id, name, code, caliber, material, st_astext(geom) geom, tpl_type_id, data_info, delete_flag,
    create_by, create_at, update_by, update_at,belong_to
        from gis_dev_ext gdx
        where dev_id = #{devId,jdbcType=VARCHAR}
        limit 1
    </select>

    <select id="findDevListByDevIds" resultMap="BaseResultMap2" parameterType="java.util.List">
        select
          id, dev_id, tpl_type_id,data_info
        from gis_dev_ext gdx
        <where>
            delete_flag = FALSE
            <if test="devIds != null and devIds.size > 0">
                and dev_id in
                <foreach collection="devIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <!-- 属性查询,导出和展示列表 -->
    <select id="findDevListByAreaOrInputVal" resultMap="BaseResultMap2">
        select ext.*,dt.name typeName from (
            select id, dev_id, tpl_type_id,data_info
            from gis_dev_ext gdx
            <where>
                delete_flag = FALSE
                <if test="dto.typeId != null">
                    and dev_id in (
                      SELECT id FROM share_dev sd WHERE
                      type_id IN (
                        WITH RECURSIVE A AS
                          ( SELECT A .*  FROM share_dev_type A
                          WHERE
                          ID = #{dto.typeId, jdbcType=BIGINT}
                          AND del_flag = 0
                          UNION ALL
                          SELECT b.* FROM share_dev_type b, A
                          WHERE A.ID = b.p_id
                          AND b.del_flag = 0
                          ) SELECT ID  FROM A
                      )
                    )
                </if>
                <if test="dto.criteriaList != null and dto.criteriaList.size > 0">
                    and
                    <foreach collection="dto.criteriaList" index="index" item="item" open=" " separator=" " close=" ">
                        ${item.assemblyStr}
                    </foreach>
                </if>
                <if test="dto.assemblyStr != null and dto.assemblyStr != '' ">
                    and ${dto.assemblyStr}
                </if>
                <if test="devIds != null and devIds != ''">
                    and EXISTS (select 1 from
                    (SELECT regexp_split_to_table(#{devIds},',') AS dev_id) AS vir  where vir.dev_id = gdx.dev_id)
                </if>
            </where>
        ) ext left join (
        select dv.id ,dv.type_id,dvt.name from share_dev dv left join share_dev_type dvt on dv.type_id = dvt.id
        ) dt on ext.dev_id = dt.id
    </select>

    <select id="findDevListByAreaOrInputValCount" resultType="java.lang.Integer">
        select count(*) from (
        select id, dev_id, tpl_type_id,data_info
        from gis_dev_ext gdx
        <where>
            delete_flag = FALSE
            <if test="dto.typeId != null">
                and dev_id in (
                SELECT id FROM share_dev sd WHERE
                type_id IN (
                WITH RECURSIVE A AS
                ( SELECT A .*  FROM share_dev_type A
                WHERE
                ID = #{dto.typeId, jdbcType=BIGINT}
                AND del_flag = 0
                UNION ALL
                SELECT b.* FROM share_dev_type b, A
                WHERE A.ID = b.p_id
                AND b.del_flag = 0
                ) SELECT ID  FROM A
                )
                )
            </if>
            <if test="dto.criteriaList != null and dto.criteriaList.size > 0">
                and
                <foreach collection="dto.criteriaList" index="index" item="item" open=" " separator=" " close=" ">
                    ${item.assemblyStr}
                </foreach>
            </if>
            <if test="dto.assemblyStr != null and dto.assemblyStr != '' ">
                and ${dto.assemblyStr}
            </if>
            <if test="devIds != null and devIds != ''">
                and EXISTS (select 1 from
                (SELECT regexp_split_to_table(#{devIds},',') AS dev_id) AS vir  where vir.dev_id = gdx.dev_id)
            </if>
        </where>
        ) ext left join (
        select dv.id ,dv.type_id,dvt.name from share_dev dv left join share_dev_type dvt on dv.type_id = dvt.id
        ) dt on ext.dev_id = dt.id
    </select>

    <select id="findPipeLength" resultType="com.jdrx.gis.beans.entity.query.PipeLengthPO" >
         select sum(cast(data_info::jsonb->> #{val} as FLOAT)) totalLength
         from gis_dev_ext gdx where caliber is not null
    </select>

    <select id="findDevListAttTypeByDevIds" resultType="java.lang.String" resultMap="BaseResultMap3" >
        SELECT t4.*, t5.name AS type_name, t5.p_id
            FROM (
                SELECT id, dev_id, type_id
                    , ST_AsText(st_transform(geom, 4326)) AS geom
                FROM (
                    SELECT t3.type_id, t2.*
                    FROM (
                        SELECT *
                        FROM gis_dev_ext t1
                        WHERE delete_flag = false
                            AND EXISTS (
                                SELECT 1
                                FROM (
                                    SELECT regexp_split_to_table(#{devIds}, ',') AS dev_id
                                ) vir
                                WHERE vir.dev_id = t1.dev_id
                            )
                    ) t2
                        LEFT JOIN (
                            SELECT id, type_id
                            FROM share_dev sd
                        ) t3
                        ON t2.dev_id = t3.id
                ) rs
            ) t4
                LEFT JOIN share_dev_type t5 ON t4.type_id = t5.id
    </select>
    <select id="findFeaturesByString"  resultType="com.jdrx.gis.beans.vo.basic.FeatureVO">
        select dev_id,GeometryType(geom) as type,ST_AsText(st_transform(geom, 4326)) AS geom from gis_dev_ext gdx
        where data_info->>'address' like '%${val}%' or data_info->>'code' like '%${val}%' or data_info->>'address' like '%${val}%'
              or data_info->>'startCode' like '%${val}%'
              or data_info->>'endCode' like '%${val}%'
        AND delete_flag = false
    </select>

    <select id="findFeaturesByDevIds" parameterType="string" resultType="com.jdrx.gis.beans.vo.basic.FeatureVO">
        select dev_id,GeometryType(geom) as type,ST_AsText(st_transform(geom, 4326)) AS geom from gis_dev_ext gdx
        where dev_id in
            <foreach collection="devIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            AND delete_flag = false
    </select>
    <select id="getLonelyPointsByDevIds" resultType="com.jdrx.gis.beans.vo.basic.AnalysisVO">
        select dev_id AS devId, code,ST_AsText(st_transform(geom, 4326)) AS geom,name from gis_dev_ext aaa
        where delete_flag = false
        <if test="devIds != null and devIds.size > 0">
            AND dev_id in
            <foreach collection="devIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getLonelyLinesByDevIds" resultType="com.jdrx.gis.beans.vo.basic.AnalysisVO">
        select dev_id AS devId, code,ST_AsText(st_transform(geom, 4326)) AS geom,name from gis_dev_ext aaa
        where delete_flag = false
        <if test="devIds != null and devIds.size > 0">
            AND dev_id in
            <foreach collection="devIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getPointDevExt" resultType="com.jdrx.gis.beans.vo.datamanage.NeoPointVO">
        select dev_id,code,name,st_x(ST_Transform((geom),4326)) as x,st_y(st_astext(ST_Transform((geom),4326))) as y,belong_to from gis_dev_ext gdx
        WHERE  caliber is  null AND delete_flag = false
        <if test="devIds != null ">
            AND
            dev_id in #{devIds}
        </if>
    </select>

    <select id="getLineDevExt" resultType="com.jdrx.gis.beans.vo.datamanage.NeoLineVO">
        select dev_id,code,caliber,material,belong_to,data_info from gis_dev_ext gdx WHERE  caliber is not null  AND delete_flag = false
        <if test="devIds != null ">
            AND
            dev_id in #{devIds}
        </if>
    </select>

    <select id="selectByCode" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT <include refid="Base_Column_List" />
        FROM gis_dev_ext gdx
        WHERE delete_flag = false
        AND code = #{code}
        LIMIT 1
    </select>

    <select id="findGeomMapByPointCode" resultType="java.util.Map">
        SELECT * FROM (
            <foreach collection="codeXYPOs" item="codeXYPO" index="index" separator="union">
                SELECT
                #{codeXYPO.code} as code,
                ST_GeomFromText(#{codeXYPO.str},#{srid}) as geom
            </foreach>
        ) AS temp
    </select>

    <insert id="batchInsertSelective" parameterType="java.util.List">
        INSERT INTO gis_dev_ext (dev_id, name, code, caliber, material, geom, tpl_type_id, data_info, create_by, create_at, belong_to)
        VALUES
        <foreach collection="gisDevExtPOList" item="item" index="index" separator=",">
            (
                #{item.devId,jdbcType=BIGINT},
                #{item.name,jdbcType=VARCHAR},
                #{item.code,jdbcType=VARCHAR},
                #{item.caliber,jdbcType=INTEGER},
                #{item.material,jdbcType=VARCHAR},
                #{item.geom,jdbcType=VARCHAR,typeHandler=GeomStrHandler},
                #{item.tplTypeId,jdbcType=BIGINT},
                #{item.dataInfo,jdbcType=OTHER},
                #{item.createBy,jdbcType=OTHER},
                #{item.createAt,jdbcType=TIMESTAMP},
                #{item.belongTo,jdbcType=BIGINT}
            )
        </foreach>
    </insert>

    <select id="selectExistRecords" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM gis_dev_ext gdx
        WHERE delete_flag = false
        AND batch_number = #{batchNum}
    </select>

    <update id="batchUpdate" parameterType="java.util.List">
        UPDATE gis_dev_ext
        <trim prefix="SET" suffixOverrides=",">
            <trim prefix="name = CASE" suffix="END,">
                <foreach collection="gisDevExtPOList" item="item" index="index">
                    <if test="item.name != null">
                        when dev_id = #{item.devId,jdbcType=VARCHAR} then #{item.name,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="code = CASE" suffix="END,">
                <foreach collection="gisDevExtPOList" item="item" index="index">
                    <if test="item.code != null">
                        when dev_id = #{item.devId,jdbcType=VARCHAR} then #{item.code,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="caliber = CASE" suffix="END,">
                <foreach collection="gisDevExtPOList" item="item" index="index">
                    <if test="item.caliber != null">
                        when dev_id = #{item.devId,jdbcType=VARCHAR} then #{item.caliber,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="material = CASE" suffix="END,">
                <foreach collection="gisDevExtPOList" item="item" index="index">
                    <if test="item.material != null">
                        when dev_id = #{item.devId,jdbcType=VARCHAR} then #{item.material,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="geom = CASE" suffix="END,">
                <foreach collection="gisDevExtPOList" item="item" index="index">
                    <if test="item.geom != null">
                        when dev_id = #{item.devId,jdbcType=VARCHAR} then #{item.geom,jdbcType=VARCHAR,typeHandler=GeomStrHandler}
                    </if>
                </foreach>
            </trim>
            <trim prefix="tpl_type_id = CASE" suffix="END,">
                <foreach collection="gisDevExtPOList" item="item" index="index">
                    <if test="item.tplTypeId != null">
                        when dev_id = #{item.devId,jdbcType=VARCHAR} then #{item.tplTypeId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="data_info = CASE" suffix="END,">
                <foreach collection="gisDevExtPOList" item="item" index="index">
                    <if test="item.dataInfo != null">
                        when dev_id = #{item.devId,jdbcType=VARCHAR} then #{item.dataInfo,jdbcType=OTHER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by = CASE" suffix="END,">
                <foreach collection="gisDevExtPOList" item="item" index="index">
                    <if test="item.updateBy != null">
                        when dev_id = #{item.devId,jdbcType=VARCHAR} then #{item.updateBy,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_at = CASE" suffix="END,">
                <foreach collection="gisDevExtPOList" item="item" index="index">
                    when dev_id = #{item.devId,jdbcType=VARCHAR} then now()
                </foreach>
            </trim>
            <trim prefix="belong_to = CASE" suffix="END,">
                <foreach collection="gisDevExtPOList" item="item" index="index">
                    <if test="item.belongTo != null">
                        when dev_id = #{item.devId,jdbcType=VARCHAR} then #{item.belongTo,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
        </trim>
        WHERE
        <foreach collection="gisDevExtPOList" separator="OR" item="item" index="index" >
            dev_id = #{item.devId,jdbcType=VARCHAR}
        </foreach>
    </update>

    <select id="selectByCodes" resultMap="BaseResultMap">
        SELECT code,
               dev_id
        FROM gis_dev_ext gdx
        WHERE delete_flag = false
        <if test="codes != null and codes != ''">
            AND EXISTS (SELECT 1 FROM
            (SELECT regexp_split_to_table(#{codes},',') AS code) AS vir  where vir.code = gdx.code)
        </if>
    </select>

    <select id="transformGeomAsText" resultType="java.lang.String">
        SELECT  st_astext(#{geom});
    </select>

    <select id="addGeomWithSrid" resultType="java.lang.String">
        SELECT ST_GeomFromText(#{geom},#{srid})
    </select>

    <select id="getPointXYFromGeom" resultType="com.jdrx.gis.beans.vo.basic.PointVO">
        SELECT st_x(#{geom,jdbcType=VARCHAR,typeHandler=GeomStrHandler} ) as x,st_y(#{geom,jdbcType=VARCHAR,typeHandler=GeomStrHandler}) as y;
    </select>
    <select id="get4544From4326" resultType="com.jdrx.gis.beans.vo.basic.PointVO">
        select st_x (geom1) as x,st_y(geom1) as y  from (select st_transform(geom,4544) as geom1 from (select st_geomfromtext(#{geom},4326) as geom) a ) cc;
    </select>

    <update id="deleteDevExtByDevId" parameterType="java.lang.String" >
        UPDATE gis_dev_ext set delete_flag = TRUE  where dev_id = #{devId}
    </update>
    <update id="deleteShareDevByDevId" parameterType="java.lang.String" >
        UPDATE share_dev set delete_flag = 1  where dev_id = #{devId}
    </update>

    <select id="transformWgs84ToCustom" resultType="java.lang.String">
        SELECT ST_GeomFromText((SELECT   ST_AsText(ST_Transform(geom,#{srid})) AS transformgeom
        FROM ST_GeomFromText(#{geom}, 4326) AS geom),#{srid})
    </select>

    <insert id="insertSelective" parameterType="com.jdrx.gis.beans.entity.basic.GISDevExtPO">
        insert into gis_dev_ext
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="devId != null">
                dev_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="caliber != null">
                caliber,
            </if>
            <if test="material != null">
                material,
            </if>
            <if test="geom != null">
                geom,
            </if>
            <if test="tplTypeId != null">
                tpl_type_id,
            </if>
            <if test="dataInfo != null">
                data_info,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="belongTo != null">
                belong_to,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="devId != null">
                #{devId,jdbcType=CHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="caliber != null">
                #{caliber,jdbcType=INTEGER},
            </if>
            <if test="material != null">
                #{material,jdbcType=VARCHAR},
            </if>
            <if test="geom != null">
                #{geom,jdbcType=VARCHAR,typeHandler=GeomStrHandler},
            </if>
            <if test="tplTypeId != null">
                #{tplTypeId,jdbcType=BIGINT},
            </if>
            <if test="dataInfo != null">
                #{dataInfo,jdbcType=OTHER},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=BIT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="belongTo != null">
                #{belongTo,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.jdrx.gis.beans.entity.basic.GISDevExtPO">
        update gis_dev_ext
        <set>
            <if test="devId != null">
                dev_id = #{devId,jdbcType=CHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="caliber != null">
                caliber = #{caliber,jdbcType=INTEGER},
            </if>
            <if test="material != null">
                material = #{material,jdbcType=VARCHAR},
            </if>
            <if test="geom != null">
                geom = #{geom,jdbcType=VARCHAR,typeHandler=GeomStrHandler},
            </if>
            <if test="tplTypeId != null">
                tpl_type_id = #{tplTypeId,jdbcType=BIGINT},
            </if>
            <if test="dataInfo != null">
                data_info = #{dataInfo,jdbcType=OTHER},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=BIT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="belongTo != null">
                belong_to = #{belongTo,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectLineByCode" parameterType="java.lang.String" resultType="com.jdrx.gis.beans.entity.basic.GISDevExtPO">
        SELECT  id, dev_id, name, code, caliber, material, st_astext(geom) as geom, tpl_type_id, data_info, delete_flag,
            create_by, create_at, update_by, update_at, belong_to from gis_dev_ext gdx
        WHERE   data_info->>'startCode' = #{val} or data_info->>'endCode' = #{val}
    </select>

    <update id="updateDataInfoByDevId">
        UPDATE gis_dev_ext
        SET data_info = #{dataInfo}
        WHERE dev_id = #{devId}
    </update>

    <select id="getLengthByGeomStr" parameterType="java.lang.String" resultType="double">
        SELECT  ROUND((st_length( #{geom}))::NUMERIC,3)
    </select>

    <select id="selectGeomByTypeId" parameterType="java.lang.Long" resultType="com.jdrx.gis.beans.vo.datamanage.ExportCadVO">
        SELECT name,Geometrytype(geom) AS type,ST_AsText(geom) AS geom,dev_id AS devId
        FROM gis_dev_ext aa
        WHERE dev_id in (
          SELECT id
          FROM share_dev bb
          WHERE type_id in(
		    SELECT id
		    FROM (WITH RECURSIVE A AS (
		        SELECT A.*  FROM share_dev_type A WHERE id = #{id} AND del_flag = 0 UNION ALL
			    SELECT b.*  FROM share_dev_type b, A WHERE A.ID = b.p_id  AND b.del_flag = 0
			) SELECT *  FROM A)a
	      )
        )
    </select>

    <select id="findFeaturesByDevId" parameterType="java.lang.String" resultType="com.jdrx.gis.beans.vo.basic.FeatureVO">
        select dev_id AS devId,GeometryType(geom) as type,ST_AsText(geom) AS geom
        from gis_dev_ext
        where dev_id = #{devId} AND delete_flag = false
    </select>

    <select id="getPipeLengthByAuthId"  resultType="com.jdrx.gis.beans.vo.basic.PipeLengthVO">
        select  belong_to as authId, ROUND(st_length(st_Astext(ST_Union(geom)))::NUMERIC,0)/1000 as length
        from  gis_dev_ext a
        where caliber  is not null and delete_flag = false GROUP BY belong_to
    </select>

    <select id="getRepeatPointsByDevIds" resultType="com.jdrx.gis.beans.vo.basic.AnalysisVO">
        select dev_id AS devId,code,ST_AsText(st_transform(geom, 4326)) AS geom,name from gis_dev_ext aaa
        where delete_flag = false
        <if test="devIds ==null or devIds.size==0">
            and st_astext(geom) in (select st_astext(geom) From  gis_dev_ext bbb  Group By st_astext(geom) Having Count(st_astext(geom))>1) and caliber is null order by st_astext(geom)
         </if>
        <if test="devIds != null and devIds.size > 0">
            AND st_astext(geom) in (select st_astext(geom) From  gis_dev_ext ccc where  dev_id in
            <foreach collection="devIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            Group By st_astext(geom) Having Count(st_astext(geom))>1) and caliber is null order by st_astext(geom)
        </if>
    </select>
    <select id="getRepeatLinesByDevIds" resultType="com.jdrx.gis.beans.vo.basic.AnalysisVO">
        select dev_id AS devId,code,ST_AsText(st_transform(geom, 4326)) AS geom,name from gis_dev_ext aaa
        where delete_flag = false
        <if test="devIds ==null or devIds.size==0">
            and st_astext(geom) in (select st_astext(geom) From  gis_dev_ext bbb  Group By st_astext(geom) Having Count(st_astext(geom))>1) and caliber is not null order by st_astext(geom)
        </if>
        <if test="devIds != null and devIds.size > 0">
            AND st_astext(geom) in (select st_astext(geom) From  gis_dev_ext ccc where  dev_id in
            <foreach collection="devIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            Group By st_astext(geom) Having Count(st_astext(geom))>1) and caliber is not null order by st_astext(geom)
        </if>
    </select>
    <update id="updateShareDev" >
            UPDATE share_dev
            SET lng = #{x},lat = #{y} where id=#{devId}
    </update>

    <select id="getGeomTypeByGeomStr" parameterType="string" resultType="string">
        select GeometryType(st_astext(#{geomStr}))
    </select>


    <update id="updateMultiVideo" >
        UPDATE gis_dev_ext
        <set>
            <if test="picUrls != null and picUrls != ''">
                pic_urls = #{picUrls},
            </if>
            <if test="videoUrls != null and videoUrls != ''">
                video_urls = #{videoUrls},
            </if>
        </set>
        WHERE dev_id = #{devId}
    </update>
</mapper>