<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdrx.gis.dao.basic.ShareDevTypePOMapper">
    <resultMap id="BaseResultMap" type="com.jdrx.gis.beans.entity.basic.ShareDevTypePO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="val" jdbcType="VARCHAR" property="val"/>
        <result column="p_id" jdbcType="BIGINT" property="pId"/>
        <result column="platform_code" jdbcType="VARCHAR" property="platformCode"/>
        <result column="limb_leaf" jdbcType="SMALLINT" property="limbLeaf"/>
        <result column="del_flag" jdbcType="SMALLINT" property="delFlag"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_at" jdbcType="TIMESTAMP" property="createAt"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, name, val, p_id, platform_code, limb_leaf, del_flag, create_by, create_at,
    update_by, update_at
    </sql>

    <select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from share_dev_type
        where del_flag = 0
        and id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findDevTypeList" resultMap="BaseResultMap">
        select
          <include refid="Base_Column_List" />
        from share_dev_type
        where del_flag = 0
    </select>

    <select id="findDevTypeListByTypeId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT *  FROM
            (
                WITH RECURSIVE T ( ID, NAME, p_id, val, limb_leaf, DEPTH ) AS (
                SELECT A .ID, A.NAME, A.p_id, A.val, A.limb_leaf, 1
                FROM share_dev_type A
                WHERE del_flag = 0
                AND ID = #{id,jdbcType=BIGINT}
                UNION ALL
                SELECT b.ID, b.NAME, b.p_id, b.val, b.limb_leaf, C.DEPTH + 1
                FROM (select * from share_dev_type WHERE del_flag = 0) b, T C
                WHERE C.ID = b.p_id
                ) SELECT *  FROM T
            ) AS rs
        WHERE DEPTH = 2
    </select>

    <select id="findAllDevTypeListByTypePId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        WITH RECURSIVE A AS (
            SELECT A .*
            FROM share_dev_type A
            WHERE p_id = #{id,jdbcType=BIGINT}
            UNION ALL
            SELECT b.* FROM share_dev_type b,A
            WHERE b.p_id = A.id
        ) SELECT * FROM A
    </select>

    <select id="findAllDevTypeListByCurrTypeId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        WITH RECURSIVE A AS (
            SELECT A .*
            FROM share_dev_type A
            WHERE id = #{id,jdbcType=BIGINT}
            UNION ALL
            SELECT b.* FROM share_dev_type b,A
            WHERE b.p_id = A.id
        ) SELECT * FROM A
    </select>

    <select id="findHasTplDevTypeListById" parameterType="java.lang.Long" resultMap="BaseResultMap">
     select * FROM share_dev_type
            WHERE id = (
                select type_id from gis_tpl_type where type_id  = (
                select type_id FROM (
                    SELECT * FROM (
                        SELECT DISTINCT type_id FROM gis_tpl_type
                    ) att
                    WHERE EXISTS (
                        SELECT 1
                        FROM (
                            WITH RECURSIVE a AS (
                                    SELECT a.id, a.p_id
                                    FROM share_dev_type a
                                    WHERE del_flag = 0
                                        AND id = #{id}
                                    UNION ALL
                                    SELECT b.id, b.p_id
                                    FROM share_dev_type b, a
                                    WHERE b.id = a.p_id
                                )
                            SELECT * FROM a
                        ) bc
                        WHERE bc.id = att.type_id
                    )
                ) exi INNER JOIN (
                        SELECT *
                        FROM (
                            WITH RECURSIVE t (id, p_id, depth) AS (
                                    SELECT a.id, a.p_id, 1
                                    FROM share_dev_type a
                                    WHERE del_flag = 0
                                        AND id = #{id}
                                    UNION ALL
                                    SELECT b.id, b.p_id, c.DEPTH + 1
                                    FROM share_dev_type b, t c
                                    WHERE c.p_id = b.id
                                )
                            SELECT * FROM t
                        ) por
                    ) pathOrd
                    ON exi.type_id = pathOrd.id  ORDER BY depth asc
                LIMIT 1
			  ) LIMIT 1
            )
    </select>

    <select id="findLeafTypesByLimbTypeIds" parameterType="java.util.List" resultMap="BaseResultMap">
    SELECT
        <include refid="Base_Column_List" />
    FROM (
        WITH RECURSIVE a AS (
            SELECT a.* FROM share_dev_type a
            WHERE del_flag = 0
                <if test="typeIds != null and typeIds.size > 0">
                    and id in
                    <foreach collection="typeIds" index="index" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            UNION ALL
            SELECT b.* FROM share_dev_type b,a
            WHERE
                a.ID = b.p_id
                AND b.del_flag = 0
        ) SELECT * FROM a
     ) as tp where tp.limb_leaf = 2
    </select>

    <select id="findTypeIdsByDevIds" parameterType="java.lang.String" resultType="java.lang.Long">
        select
          type_id
        from share_dev sd
        where  del_flag = 0
        <if test="devIds != null and devIds != ''">
            and EXISTS (select 1 from
            (SELECT regexp_split_to_table(#{devIds},',') AS dev_id) AS vir  where vir.dev_id = sd.id)
        </if>
    </select>

    <select id="findDevTypeListByIds" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from share_dev_type
        where del_flag = 0
        <if test="ids != null and ids.size > 0">
            and id in
            <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="findPointTypeByIds" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from share_dev_type
        where del_flag = 0  and  p_id in ( ${ids}) and limb_leaf = 2
    </select>

    <select id="findLineTypeByIds" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from share_dev_type
        where del_flag = 0  and  p_id in ( ${ids})
    </select>

    <!-- 根据名称获取某条-->
    <select id="selectByTypeName" parameterType="string" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM share_dev_type
        WHERE del_flag = 0
          AND name = #{name}
          AND limb_leaf = 2
        LIMIT 1
    </select>

    <!-- 获取所有叶子类别-->
    <select id="findAllDevLeafType" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM share_dev_type
        WHERE del_flag = 0
        AND limb_leaf = 2
    </select>

    <!-- 获取顶层ID，通过名称-->
    <select id="getIdByNameForTopHierarchy" resultType="java.lang.Long">
        SELECT id FROM share_dev_type
         WHERE del_flag = 0
         AND p_id = -1
         AND name  = #{name}
         LIMIT 1
    </select>

    <select id="getAllTypeIdByTopId" resultType="long">
        SELECT id  FROM (
            WITH RECURSIVE A AS (
                SELECT A.*  FROM share_dev_type A
                WHERE p_id = #{topId}
                      AND del_flag = 0 UNION ALL
                SELECT b.*  FROM share_dev_type b, A
                WHERE A.ID = b.p_id  AND b.del_flag = 0
            ) SELECT *  FROM A
        )a
    </select>
    <select id="getIdByName" resultType="java.lang.Long">
        SELECT id FROM share_dev_type
        WHERE del_flag = 0
        AND name  = #{name}
        LIMIT 1
    </select>
</mapper>