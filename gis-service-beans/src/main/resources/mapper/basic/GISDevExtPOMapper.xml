<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdrx.gis.dao.basic.GISDevExtPOMapper">
    <resultMap id="BaseResultMap" type="com.jdrx.gis.beans.entry.basic.GISDevExtPO">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="dev_id" jdbcType="BIGINT" property="devId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="caliber" jdbcType="INTEGER" property="caliber" />
        <result column="material" jdbcType="VARCHAR" property="material" />
        <result column="geom" jdbcType="VARCHAR" property="geom" />
        <result column="tpl_type_id" jdbcType="BIGINT" property="tplTypeId" />
        <result column="data_info" jdbcType="OTHER" property="dataInfo" />
        <result column="delete_flag" jdbcType="BIT" property="deleteFlag" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.jdrx.gis.beans.vo.query.GISDevExtVO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="dev_id" jdbcType="BIGINT" property="devId"/>
        <result column="tpl_type_id" jdbcType="BIGINT" property="tplTypeId"/>
        <result column="data_info" jdbcType="OTHER" property="dataInfo"/>
        <result column="typeName" jdbcType="VARCHAR" property="typeName"/>
    </resultMap>

    <resultMap id="BaseResultMap3" type="com.jdrx.gis.beans.vo.query.GISDevExt2VO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="dev_id" jdbcType="BIGINT" property="devId"/>
        <result column="type_id" jdbcType="BIGINT" property="typeId"/>
        <result column="geom" jdbcType="VARCHAR" property="geom"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, dev_id, name, code, caliber, material, geom, tpl_type_id, data_info, delete_flag,
    create_by, create_at, update_by, update_at
    </sql>

    <select id="getDevExtByDevId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        id, dev_id, name, code, caliber, material, st_astext(geom) geom, tpl_type_id, data_info, delete_flag,
    create_by, create_at, update_by, update_at
        from gis_dev_ext
        where dev_id = #{devId,jdbcType=BIGINT}
        limit 1
    </select>

    <select id="findDevListByDevIds" resultMap="BaseResultMap2" parameterType="java.util.List">
        select
          id, dev_id, tpl_type_id,data_info
        from gis_dev_ext
        <where>
            delete_flag = FALSE
            <if test="devIds != null and devIds.size > 0">
                and dev_id in
                <foreach collection="devIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="findDevListByAreaOrInputVal" resultMap="BaseResultMap2">
        select ext.*,dt.name typeName from (
            select id, dev_id, tpl_type_id,data_info
            from gis_dev_ext gdx
            <where>
                delete_flag = FALSE
                <if test="dto.typeId != null">
                    and dev_id in (
                      SELECT id FROM share_dev WHERE
                      type_id IN (
                        WITH RECURSIVE A AS
                          ( SELECT A .*  FROM share_dev_type A
                          WHERE
                          ID = #{dto.typeId, jdbcType=BIGINT}
                          AND del_flag = 0
                          UNION ALL
                          SELECT b.* FROM share_dev_type b, A
                          WHERE A.ID = b.p_id
                          AND b.del_flag = 0
                          ) SELECT ID  FROM A
                      )
                    )
                </if>
                <if test="dto.paramVal != null and dto.paramVal != ''">
                    and data_info :: jsonb ->> #{dto.fieldName, jdbcType=VARCHAR}
                    like concat('%', #{dto.paramVal, jdbcType=VARCHAR}, '%')
                </if>
                <if test="devIds != null and devIds != ''">
                    and EXISTS (select 1 from
                    (SELECT regexp_split_to_table(#{devIds},',') AS dev_id) AS vir  where cast(vir.dev_id as BIGINT) = gdx.dev_id)
                </if>
            </where>
        ) ext left join (
        select dv.id ,dv.type_id,dvt.name from share_dev dv left join share_dev_type dvt on dv.type_id = dvt.id
        ) dt on ext.dev_id = dt.id
    </select>

    <select id="findDevListByAreaOrInputValCount" resultType="java.lang.Integer">
        select count(*) from (
        select id, dev_id, tpl_type_id,data_info
        from gis_dev_ext gdx
        <where>
            delete_flag = FALSE
            <if test="dto.typeId != null">
                and dev_id in (
                SELECT id FROM share_dev WHERE
                type_id IN (
                WITH RECURSIVE A AS
                ( SELECT A .*  FROM share_dev_type A
                WHERE
                ID = #{dto.typeId, jdbcType=BIGINT}
                AND del_flag = 0
                UNION ALL
                SELECT b.* FROM share_dev_type b, A
                WHERE A.ID = b.p_id
                AND b.del_flag = 0
                ) SELECT ID  FROM A
                )
                )
            </if>
            <if test="dto.paramVal != null and dto.paramVal != ''">
                and data_info :: jsonb ->> #{dto.fieldName, jdbcType=VARCHAR}
                like concat('%', #{dto.paramVal, jdbcType=VARCHAR}, '%')
            </if>
            <if test="devIds != null and devIds != ''">
                and EXISTS (select 1 from
                (SELECT regexp_split_to_table(#{devIds},',') AS dev_id) AS vir  where cast(vir.dev_id as BIGINT) = gdx.dev_id)
            </if>
        </where>
        ) ext left join (
        select dv.id ,dv.type_id,dvt.name from share_dev dv left join share_dev_type dvt on dv.type_id = dvt.id
        ) dt on ext.dev_id = dt.id
    </select>

    <select id="findPipeLength" resultType="com.jdrx.gis.beans.entry.query.PipeLengthPO" >
         select sum(cast(data_info::jsonb->> #{val} as BIGINT)) totalLength
         from gis_dev_ext where caliber is not null
    </select>

    <select id="findDevListAttTypeByDevIds" resultType="java.lang.String" resultMap="BaseResultMap3" >
        SELECT id, dev_id, type_id, ST_AsText(st_transform(geom,4326)) geom
        FROM (
            SELECT t3.type_id, t2.*
            FROM (
                SELECT * FROM gis_dev_ext t1
                WHERE delete_flag = false
                    AND EXISTS (
                        SELECT 1
                        FROM (
                            SELECT regexp_split_to_table(#{devIds}, ',') AS dev_id
                        ) vir
                        WHERE CAST(vir.dev_id AS BIGINT) = t1.dev_id
                    )
            ) t2
                LEFT JOIN (
                    SELECT id, type_id
                    FROM share_dev
                ) t3
                ON t2.dev_id = t3.id
        ) rs
    </select>
</mapper>